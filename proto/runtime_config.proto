//package oci.config.runtime;
package oci;

import "runtime_config_linux.proto";

// RuntimeSpec is the generic runtime state information on a running container
message RuntimeSpec {
	// Mounts is a mapping of names to mount configurations.
	// Which mounts will be mounted and where should be chosen with MountPoints
	// in Spec.
	repeated MountFieldEntry Mounts = 1;
	// Hooks are the commands run at various lifecycle events of the container.
	optional Hooks Hooks = 2;
}

// LinuxRuntimeSpec is the full specification for linux containers.
message LinuxRuntimeSpec {
	optional RuntimeSpec RuntimeSpec = 1;
	// LinuxRuntime is platform specific configuration for linux based containers.
	optional oci.LinuxRuntime Linux = 2;
}

// MountFieldEntry is more backwards compatible protobuf associative map (than map<string, Mount>)
message MountFieldEntry {
	required string key = 1;
	required Mount value = 2;
}

// Mount specifies a mount for a container
message Mount {
	// Type specifies the mount kind.
	optional string Type = 1;
	// Source specifies the source path of the mount. In the case of bind mounts on
	// linux based systems this would be the file on the host.
	optional string Source = 2;
	// Options are fstab style mount options.
	repeated string Options = 3;
}

// Hook specifies a command that is run at a particular event in the lifecycle of a container
message Hook {
	optional string Path = 1;
	repeated string Args = 2;
	repeated string Env = 3;
}

// Hooks for container setup and teardown
message Hooks {
	// Prestart is a list of hooks to be run before the container process is executed.
	// On Linux, they are run after the container namespaces are created.
	repeated Hook Prestart = 1;
	// Poststop is a list of hooks to be run after the container process exits.
	repeated Hook Poststop = 2;
}
